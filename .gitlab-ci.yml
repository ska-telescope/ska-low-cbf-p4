# GitLab CI in conjunction with GitLab Runner can use Docker Engine to test and build any application.
# Docker, when used with GitLab CI, runs each job in a separate and isolated container using the predefined image that is set up in .gitlab-ci.yml.
# In this case we use the latest python docker image to build and test this project.
# We store the artefact.skao.int/ska-k8s-tools/docker-builder:x.x.x as a group level variable for convenience
image: $SKA_K8S_TOOLS_DOCKER_BUILDER_IMAGE

# cache is used to specify a list of files and directories which should be cached between jobs. You can only use paths that are within the project workspace.
# If cache is defined outside the scope of jobs, it means it is set globally and all jobs will use that definition
# cache:
#   paths:
#     - build

# The YAML file defines a set of jobs with constraints stating when they should be run.
# You can specify an unlimited number of jobs which are defined as top-level elements with an arbitrary name and always have to contain at least the script clause.
# In this case we have only the test job which produce an artifacts (it must be placed into a directory called "public")
# It is also specified that only the master branch will be subject of this job.

stages:
  - lint
  - build
  - test
  - pages
  - publish
  - scan

#p4test:
#  stage: test
#  tags:
#    - p4testing
#  script:
#    - source ~/.profile
#    - poetry install
#    - sudo -E $(which poetry) run pytest -m bfrt -vv
#    - sudo chown -R gitlab-runner:gitlab-runner /home/gitlab-runner/builds/

# Modify standard included jobs

python-test:
  # this is too hard to hack into running on our p4 switch
  # so for now we just skip it.
  # TODO: split tests and run unit tests that don't need the hardware here
  rules:
    - when: never

k8s-test:
  tags:
    - k8srunner-psi-low

stop-k8s-test:
  tags:
    - k8srunner-psi-low

variables:
  GIT_SUBMODULE_STRATEGY: recursive
  CHARTS_TO_PUBLISH: ska-low-cbf-conn
include:
  # Standard SKA includes:
  # OCI Images
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/oci-image.gitlab-ci.yml'
  # Python packages build,lint, test and publish
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/python.gitlab-ci.yml'
  # Helm Charts
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/helm-chart.gitlab-ci.yml'
  # Docs pages
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/docs.gitlab-ci.yml'
  # Kubernetes
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/k8s.gitlab-ci.yml'
  # .post step finalisers eg: badges
  - project: 'ska-telescope/templates-repository'
    file: 'gitlab-ci/includes/finaliser.gitlab-ci.yml'
